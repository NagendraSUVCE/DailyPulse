@model List<DailyPulseMVC.Models.PomodoroEntry>
@{
    ViewBag.Title = "Pomodoro Timer";
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const timerDisplay = document.getElementById("timerDisplay");
            if (timerDisplay) {
                document.title = timerDisplay.textContent;
            }
        });
    </script>
}

<h2 style="text-align: center; font-family: Arial, sans-serif; color: #333;">Pomodoro Timer</h2>

<div style="max-width: 600px; margin: 0 auto; font-family: Arial, sans-serif; border: 1px solid #ccc; padding: 20px; border-radius: 8px; background-color: #f9f9f9;">
    <h3 style="text-align: center; color: #555;">Start a New Session</h3>
    <div style="margin-bottom: 15px;">
        <label for="daily15MinLogId" style="font-weight: bold;">Daily15MinLogId:</label>
        <input type="text" id="daily15MinLogId" style="width: 100%; padding: 8px; margin-top: 5px; border: 1px solid #ccc; border-radius: 4px;" />
    </div>
    <div style="margin-bottom: 15px;">
        <label for="description" style="font-weight: bold;">Description:</label>
        <textarea id="description" rows="4" style="width: 100%; padding: 8px; margin-top: 5px; border: 1px solid #ccc; border-radius: 4px;"></textarea>
    </div>
    <div style="margin-bottom: 15px;">
        <label for="startTime" style="font-weight: bold;">Start Time:</label>
        <input type="text" id="startTime" readonly style="width: 100%; padding: 8px; margin-top: 5px; border: 1px solid #ccc; border-radius: 4px; background-color: #e9ecef;" />
    </div>
    <div style="margin-bottom: 15px;">
        <label for="endTime" style="font-weight: bold;">End Time:</label>
        <input type="text" id="endTime" readonly style="width: 100%; padding: 8px; margin-top: 5px; border: 1px solid #ccc; border-radius: 4px; background-color: #e9ecef;" />
    </div>
    <div style="text-align: center;">
        <button id="startBtn" style="padding: 10px 20px; background-color: #007bff; color: white; border: none; border-radius: 4px; cursor: pointer;">Start 25-Min Timer</button>
    </div>
    <p id="timerDisplay" style="text-align: center; font-size: 1.5em; margin-top: 15px; color: #333;">25:00</p>
</div>

<h3 style="text-align: center; font-family: Arial, sans-serif; color: #333; margin-top: 40px;">Previous Sessions</h3>

<div style="text-align: center; margin-bottom: 15px;">
    <input type="text" id="filterInput" placeholder="Filter by Description..." style="width: 80%; padding: 8px; border: 1px solid #ccc; border-radius: 4px;" />
</div>

<table id="pomodoroTable" style="width: 80%; margin: 0 auto; border-collapse: collapse; font-family: Arial, sans-serif; background-color: #fff; border: 1px solid #ccc;">
    <thead>
        <tr style="background-color: #007bff; color: white; cursor: pointer;">
            <th style="padding: 10px; border: 1px solid #ccc;" data-column="Daily15MinLogId">Daily15MinLogId</th>
            <th style="padding: 10px; border: 1px solid #ccc;" data-column="StartTime">Start</th>
            <th style="padding: 10px; border: 1px solid #ccc;" data-column="EndTime">End</th>
            <th style="padding: 10px; border: 1px solid #ccc;" data-column="Description">Description</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var entry in Model.OrderByDescending(e => e.EndTime))
        {
            <tr>
                <td style="padding: 10px; border: 1px solid #ccc;">@entry.Daily15MinLogId</td>
                <td style="padding: 10px; border: 1px solid #ccc;">@entry.StartTime</td>
                <td style="padding: 10px; border: 1px solid #ccc;">@entry.EndTime</td>
                <td style="padding: 10px; border: 1px solid #ccc;">@entry.Description</td>
            </tr>
        }
    </tbody>
</table>

@section Scripts {
<script>
    document.addEventListener("DOMContentLoaded", function () {
        const filterInput = document.getElementById("filterInput");
        const table = document.getElementById("pomodoroTable");
        const headers = table.querySelectorAll("thead th");
        const rows = table.querySelectorAll("tbody tr");

        // Filter functionality
        filterInput.addEventListener("input", function () {
            const filterValue = filterInput.value.toLowerCase();
            rows.forEach(row => {
                const descriptionCell = row.cells[3].textContent.toLowerCase();
                row.style.display = descriptionCell.includes(filterValue) ? "" : "none";
            });
        });

        // Sorting functionality
        headers.forEach(header => {
            header.addEventListener("click", function () {
                const column = header.getAttribute("data-column");
                const isAscending = header.classList.contains("asc");
                const sortedRows = Array.from(rows).sort((a, b) => {
                    const aText = a.querySelector(`td:nth-child(${header.cellIndex + 1})`).textContent.trim();
                    const bText = b.querySelector(`td:nth-child(${header.cellIndex + 1})`).textContent.trim();
                    return isAscending ? aText.localeCompare(bText) : bText.localeCompare(aText);
                });

                header.classList.toggle("asc", !isAscending);
                header.classList.toggle("desc", isAscending);

                const tbody = table.querySelector("tbody");
                tbody.innerHTML = "";
                sortedRows.forEach(row => tbody.appendChild(row));
            });
        });
    });
</script>
}
